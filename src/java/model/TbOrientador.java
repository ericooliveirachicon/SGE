package model;
// Generated 23/09/2015 18:27:47 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * TbOrientador generated by hbm2java
 */
@Entity
@Table(name="tb_orientador"
    ,catalog="bd_sge"
    , uniqueConstraints = {@UniqueConstraint(columnNames="mat_orientador"), @UniqueConstraint(columnNames="cpf_orientador")} 
)
public class TbOrientador  implements java.io.Serializable {


     private Integer idtOrientador;
     private TbFaculdade tbFaculdade;
     private String nmeOrientador;
     private String emailOrientador;
     private String cpfOrientador;
     private String matOrientador;
     private Set<TbEstagiario> tbEstagiarios = new HashSet<TbEstagiario>(0);

    public TbOrientador() {
    }

	
    public TbOrientador(TbFaculdade tbFaculdade, String nmeOrientador, String emailOrientador, String cpfOrientador, String matOrientador) {
        this.tbFaculdade = tbFaculdade;
        this.nmeOrientador = nmeOrientador;
        this.emailOrientador = emailOrientador;
        this.cpfOrientador = cpfOrientador;
        this.matOrientador = matOrientador;
    }
    public TbOrientador(TbFaculdade tbFaculdade, String nmeOrientador, String emailOrientador, String cpfOrientador, String matOrientador, Set<TbEstagiario> tbEstagiarios) {
       this.tbFaculdade = tbFaculdade;
       this.nmeOrientador = nmeOrientador;
       this.emailOrientador = emailOrientador;
       this.cpfOrientador = cpfOrientador;
       this.matOrientador = matOrientador;
       this.tbEstagiarios = tbEstagiarios;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idt_orientador", unique=true, nullable=false)
    public Integer getIdtOrientador() {
        return this.idtOrientador;
    }
    
    public void setIdtOrientador(Integer idtOrientador) {
        this.idtOrientador = idtOrientador;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cod_faculdade", nullable=false)
    public TbFaculdade getTbFaculdade() {
        return this.tbFaculdade;
    }
    
    public void setTbFaculdade(TbFaculdade tbFaculdade) {
        this.tbFaculdade = tbFaculdade;
    }
    
    @Column(name="nme_orientador", nullable=false, length=80)
    public String getNmeOrientador() {
        return this.nmeOrientador;
    }
    
    public void setNmeOrientador(String nmeOrientador) {
        this.nmeOrientador = nmeOrientador;
    }
    
    @Column(name="email_orientador", nullable=false, length=80)
    public String getEmailOrientador() {
        return this.emailOrientador;
    }
    
    public void setEmailOrientador(String emailOrientador) {
        this.emailOrientador = emailOrientador;
    }
    
    @Column(name="cpf_orientador", unique=true, nullable=false, length=15)
    public String getCpfOrientador() {
        return this.cpfOrientador;
    }
    
    public void setCpfOrientador(String cpfOrientador) {
        this.cpfOrientador = cpfOrientador;
    }
    
    @Column(name="mat_orientador", unique=true, nullable=false, length=15)
    public String getMatOrientador() {
        return this.matOrientador;
    }
    
    public void setMatOrientador(String matOrientador) {
        this.matOrientador = matOrientador;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tbOrientador")
    public Set<TbEstagiario> getTbEstagiarios() {
        return this.tbEstagiarios;
    }
    
    public void setTbEstagiarios(Set<TbEstagiario> tbEstagiarios) {
        this.tbEstagiarios = tbEstagiarios;
    }




}


